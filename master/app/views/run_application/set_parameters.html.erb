<script type="text/javascript">
   $(function(){
       $('#parameters_grouping').change(function(){
           var group_name = $("#parameters_grouping").val();
					 var data_set_id = $("#data_set_id").val();
           $.get("/run_application/factor_select?grouping=" + group_name + "&data_set_id=" + data_set_id);
       })

      $("#go_next").on('click', function(){
        <% if @reference_required_and_unavailable %>
          alert("Genome reference applications are currently unavailable. Please try again later.");
          return false;
        <% end %>
        
        var prohibit_char = /[^a-zA-Z0-9_-]/;
        var next_dataset_name = $("#next_dataset_name").val();

        if(next_dataset_name.match(prohibit_char)){
          alert("WARNING: Only alphabets, numbers, underscore '_' and hyphen '-' are allowed for the Next DataSet name");
          $("#next_dataset_name").addClass('attention');
          return false;
        }else if(next_dataset_name != null) {
          $("#go_next").submit();
        }
      });

      // --- Parameter help tooltip (lazy load + in-page cache) ---
      var __paramHelpMem = {};
      function __showParamTip($el, text){
        var $tip = $el.data('tip');
        if(!$tip){
          $tip = $('<div/>').addClass('param-help-tip').css({
            position: 'absolute', zIndex: 9999, display: 'none',
            maxWidth: 420, background: '#333', color: '#fff',
            padding: '8px 10px', borderRadius: 4, fontSize: 12,
            boxShadow: '0 2px 8px rgba(0,0,0,0.25)', whiteSpace: 'normal'
          }).appendTo('body');
          $el.data('tip', $tip);
        }
        $tip.text(text);
        var o = $el.offset();
        $tip.css({ top: o.top + $el.outerHeight() + 4, left: o.left }).show();
      }
      function __hideParamTip($el){
        var $tip = $el.data('tip'); if($tip) $tip.hide();
      }
      function __hideAllParamTips(){
        $('.param-help').each(function(){
          var $t = $(this).data('tip'); if($t) $t.hide();
        });
      }
      $(document).on('mouseenter click', '.param-help', function(){
        __hideAllParamTips();
        var $el = $(this);
        var app = $el.data('app');
        var param = $el.data('param');

        // Find current value in the same row
        var $row = $el.closest('tr');
        var $field = $row.find('[name="parameters[' + param + ']"]');
        var value = '';
        if($field.length){
          if($field.is('select') && $field.prop('multiple')){
            value = ($field.val() || []).join(',');
          }else{
            value = $field.val() || '';
          }
        }

        var memKey = [app, param, value].join('|');
        if(__paramHelpMem[memKey]){ __showParamTip($el, __paramHelpMem[memKey]); return; }

        __showParamTip($el, 'Loading...');
        $.get('/run_application/parameter_description', { application: app, parameter: param, value: value })
          .done(function(res){
            var text = (res && res.success && res.response) ? res.response : 'No description available.';
            __paramHelpMem[memKey] = text;
            __showParamTip($el, text);
          })
          .fail(function(){
            var text = 'Failed to load description.';
            __paramHelpMem[memKey] = text;
            __showParamTip($el, text);
          });
      }).on('mouseleave', '.param-help', function(){ __hideParamTip($(this)); })
      .on('mouseleave', '.param-help-tip', function(){ $(this).hide(); });

      // Hide tips when clicking outside or scrolling
      $(document).on('click', function(e){
        if(!$(e.target).closest('.param-help, .param-help-tip').length){
          __hideAllParamTips();
        }
      });
      $(window).on('scroll resize', function(){ __hideAllParamTips(); });
   });
</script>

<h2><%= @sushi_app.class %> <span style="color:gray;font-size:medium">Set Parameters</span></h2>

<% if @reference_required_and_unavailable %>
  <div class="alert alert-warning" style="margin-bottom: 20px;">
    <strong>Warning:</strong> Genome reference applications are currently unavailable.
  </div>
<% end %>

<blockquote>
  <%= @sushi_app.description.to_s.html_safe %>
</blockquote>
<hr />
<%= form_tag('/run_application/confirmation', :multipart => true) do %>
  <%= hidden_field :sushi_app, :class, :value => @sushi_app.class %>
  <%= hidden_field :data_set, :id, :value => @data_set.id %>
  <h3>Next DataSet</h3>
    <table>
      <tr>
        <th>Name</th>
        <% unless @order_ids.empty? %>
          <td><%= text_field :next_dataset, :name, :value => [@order_ids.map{|oid| "o#{oid}"}.join("_"), @sushi_app.name].join('_').gsub(/\s/,''), :with=>"ascii" %></td>
          <% else %>
          <td><%= text_field :next_dataset, :name, :value => @sushi_app.name.gsub(/\s/,''), :with=>"ascii" %></td>
        <% end %>
      </tr>
      <tr>
        <th>Comment</th>
        <td><%= text_field :next_dataset, :comment, :value => "" %></td>
      </tr>
    </table>
  <h3>Parameters</h3>
    <table>
      <% @sushi_app.params.each do |key, value| %>
        <% selected_value = @params_selected[key] %>
        <% if @sushi_app.params[key, 'employee'] and session[:employee] or !@sushi_app.params[key, 'employee'] %>
          <% if desc = @sushi_app.params[key, 'hr-header'] %>
          <tr>
              <td class="no-border" colspan=2>
                <hr \>
                <%= desc %>
                <br \>
              </td>
          </tr>
          <tr>
              <td class="no-border" colspan=2>
                &nbsp;
              </td>
          </tr>
          <% elsif @sushi_app.params[key, 'hr'] %>
          <tr>
              <th>
                <hr \>
              </th>
              <td>
                <hr \>
              </td>
          </tr>
          <% end %>

        <tr>
          <th>
            <%= key %>
            <span class="param-help"
                  data-app="<%= @sushi_app.name %>"
                  data-param="<%= key %>"> â“˜</span>
          </th>
          <td>
          <% case key %>
          <% when 'process_mode' %>
            <% if value.kind_of?(Array) %>
              <%= select :parameters, key.to_sym, value %>
            <% else %>
              <%= text_field :parameters, key.to_sym, :value => value, :disabled => true %>
            <% end %>
          <% when 'partition' %>
            <% if session[:employee] %>
              <%= select :parameters, key.to_sym, partitions, :selected => value.to_s %>
            <% else %>
              <%= text_field :parameters, key.to_sym, :value => "#{session[:partition]}", :readonly => true %>
            <% end %>
          <% when 'samples' %>
            <%= select_tag "parameters[#{key}]", options_for_select(@samples, {:selected => @samples.map{|sample| sample.last}}), :class => 'resizable', :multiple => true, :size => 5 %><br />
          <% else %>
            <% if @factors and key=='grouping' %>
              <%= select :parameters, :grouping, options_for_select(@factor_colums.keys.map{|factor| [factor.split.first, factor.split.first]}, params[:grouping]),  :prompt => "please select" %>
            <% elsif @factors and key=='sampleGroup' %>
              <%= render :partial => '/run_application/select_sample_group' %>
            <% elsif @factors and key=='refGroup' %>
              <%= render :partial => '/run_application/select_ref_group' %>
            <% elsif @factors and key=='sampleGroupBaseline' %>
              <%= render :partial => '/run_application/select_sample_group_baseline' %>
            <% elsif @factors and key=='refGroupBaseline' %>
              <%= render :partial => '/run_application/select_ref_group_baseline' %>
            <% elsif key=='refBuild' and value.instance_of?(Hash) %>
              <%= select :parameters, key.to_sym, value.map{|k,v| [k.to_s.split(//)[0,90].join, v]}, :selected => selected_value.to_s %>
            <% elsif value.instance_of?(TrueClass) or value.instance_of?(FalseClass) %>
              <%= select :parameters, key.to_sym, ['true', 'false'], :selected => value.to_s %>
            <% elsif value.instance_of?(Array) %>
              <% if @sushi_app.params[key, "multi_selection"] %>
                <% multi_selection_size = @sushi_app.params[key, "multi_selection_size"]||(value.length>5 ? value.length : 5) %>
                <% if selected_value = @sushi_app.params[key, "selected"] %>
                  <% if !selected_value.instance_of?(String) and !selected_value.instance_of?(Array) %>
                    <% selected_value = value[selected_value] %>
                  <% end %>
                <% elsif @sushi_app.params[key, "all_selected"] %>
                    <% selected_value = value %>
                <% end %>
                <%= select_tag "parameters[#{key}]", options_for_select(value, {:selected => selected_value}), :multiple => true, :size=>multi_selection_size  %><br />
              <% else  %>
                <%= select :parameters, key.to_sym, value, :selected => selected_value.to_s %>
              <% end %>
            <% elsif value.instance_of?(Hash) %>
              <%= select :parameters, key.to_sym, value, :selected => selected_value.to_s %>
            <% elsif @sushi_app.params[key, 'file_upload'] %>
              <%= file_field :parameters, key.to_sym, :class=>"" %>
            <% else %>
              <%= text_field :parameters, key.to_sym, :value => "#{value}", :with=>"ascii" %>
            <% end %>
          <% end %>

          <% if @sushi_app.required_params and @sushi_app.required_params.include?(key) %>
            <font color=red>required</font>
          <% end %>
          <font color=gray><%= @sushi_app.params[key, 'description'].to_s.html_safe %></font>
        </td>
        </tr>
        <% end %>
      <% end %>
    </table>
  <br />
  <br />
  <%= submit_tag 'Next', :id=>"go_next", :class=>"btn btn-info btn-sm raised#{' disabled' if @reference_required_and_unavailable}", :disabled=>@reference_required_and_unavailable %>
<% end %>


